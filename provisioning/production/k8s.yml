apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ application }}-{{ environment }}
  namespace: ps2alerts
  labels:
    app: {{ application }}-{{ environment }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ application }}-{{ environment }}
  template:
    metadata:
      labels:
        app: {{ application }}-{{ environment }}
        version: {{ version }}
    spec:
      containers:
        - name: application
          image: maelstromeous/applications:ps2alerts-api-{{ environment }}-{{ version }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "10m"
              memory: "256Mi"
            limits:
              cpu: "50m"
              memory: "256Mi"
          env:
            - name: NODE_ENV
              value: "{{ environment }}"
            - name: VERSION
              value: "{{ version }}"
            - name: DB_USER
              value: "{{ db_user }}"
            - name: DB_PASS
              value: "{{ db_pass }}"
            - name: DB_HOST
              value: "ps2alerts-db"
            - name: DB_PORT
              value: "27017"
            - name: DB_NAME
              value: "{{ db_name }}"
            - name: DB_DEBUG
              value: "false"
            - name: DB_POOL_SIZE
              value: "{{ db_pool_size }}"
            - name: RABBITMQ_HOST
              value: "ps2alerts-rabbitmq"
            - name: RABBITMQ_USER
              value: "ps2alerts"
            - name: RABBITMQ_PASS
              value: "{{ rabbitmq_pass }}"
            - name: RABBITMQ_VHOST
              value: "/ps2alerts"
            - name: RABBITMQ_QUEUE
              value: "{{ rabbitmq_queue }}"
            - name: RABBITMQ_PREFETCH
              value: "{{ rabbitmq_prefetch }}"
            - name: REDIS_HOST
              value: "{{ redis_host }}"
            - name: REDIS_PASS
              value: "{{ redis_pass }}"
            - name: REDIS_DB
              value: "{{ redis_db }}"
            - name: AGGREGATOR_ENABLED
              value: "false"
            - name: CRON_ENABLED
              value: "true"
            - name: LOGGER_TRANSPORTS
              value: "console"
            - name: INTERNAL_API_USER
              value: "{{ internal_api_user }}"
            - name: INTERNAL_API_PASS
              value: "{{ internal_api_pass }}"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ application }}-{{ environment }}
  namespace: ps2alerts
  annotations:
    nginx.ingress.kubernetes.io/server-snippet: |
      expires 1d;
      add_header Cache-Control "public, must-revalidate";
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "{{ hostname }}"
        - "www.{{ hostname }}"
      secretName: {{ application }}-{{ environment }}-tls
  rules:
      - host: "{{ hostname }}"
        http:
          paths:
            - pathType: Prefix
              path: "/"
              backend:
                service:
                  name: {{ application }}-{{ environment }}
                  port:
                    number: {{ port }}
        - host: "www.{{ hostname }}"
          http:
            paths:
              - pathType: Prefix
                path: "/"
                backend:
                  service:
                    name: {{ application }}-{{ environment }}
                    port:
                      number: {{ port }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ application }}-{{ environment }}
  namespace: ps2alerts
spec:
  secretName: {{ application }}-{{ environment }}-tls
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
    group: cert-manager.io
  commonName: {{ hostname }}
  dnsNames:
    - {{ hostname }}
    - www.{{ hostname }}
