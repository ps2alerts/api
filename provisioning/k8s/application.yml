apiVersion: v1
kind: Namespace
metadata:
  name: ps2alerts
---
apiVersion: v1
kind: Service
metadata:
  name: {{ application }}-{{ environment }}
  namespace: ps2alerts
spec:
  selector:
    app: {{ application }}-{{ environment }}
  ports:
      - protocol: TCP
        port: {{ port }}
        targetPort: {{ port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ application }}-{{ environment }}
  namespace: ps2alerts
  labels:
    app: {{ application }}-{{ environment }}
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ application }}-{{ environment }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ application }}-{{ environment }}
        version: {{ version }}
    spec:
      containers:
        - name: application
          image: maelstromeous/applications:{{ application }}-{{ environment }}-{{ version }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "300m"
              memory: "256Mi"
          startupProbe:
            httpGet:
              path: /static/index.html
              port: {{ port }}
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6 # 60 seconds, takes normally about 20s
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /static/index.html
              port: {{ port }}
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 4 # If dead for 1m
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /static/index.html
              port: {{ port }}
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 4 #If dead for 1m
            timeoutSeconds: 5
            terminationGracePeriodSeconds: 15
          env:
            - name: NODE_ENV
              value: "{{ environment }}"
            - name: VERSION
              value: "{{ version }}"
            - name: DB_USER
              value: "{{ db_user }}"
            - name: DB_PASS
              value: "{{ db_pass }}"
            - name: DB_HOST
              value: "ps2alerts-db"
            - name: DB_PORT
              value: "27017"
            - name: DB_NAME
              value: "{{ db_name }}"
            - name: DB_DEBUG
              value: "false"
            - name: DB_POOL_SIZE
              value: "{{ db_pool_size }}"
            - name: RABBITMQ_HOST
              value: "ps2alerts-rabbitmq"
            - name: RABBITMQ_USER
              value: "ps2alerts"
            - name: RABBITMQ_PASS
              value: "{{ rabbitmq_pass }}"
            - name: RABBITMQ_VHOST
              value: "/ps2alerts"
            - name: RABBITMQ_QUEUE
              value: "{{ rabbitmq_queue }}"
            - name: RABBITMQ_PREFETCH
              value: "{{ rabbitmq_prefetch }}"
            - name: REDIS_HOST
              value: "{{ redis_host }}"
            - name: REDIS_PASS
              value: "{{ redis_pass }}"
            - name: REDIS_DB
              value: "{{ redis_db }}"
            - name: AGGREGATOR_ENABLED
              value: "true"
            - name: CRON_ENABLED
              value: "false"
            - name: LOGGER_TRANSPORTS
              value: "console"
            - name: INTERNAL_API_USER
              value: "{{ internal_api_user }}"
            - name: INTERNAL_API_PASS
              value: "{{ internal_api_pass }}"
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ application }}-{{ environment }}
  namespace: ps2alerts
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ application }}-{{ environment }}
  minReplicas: {{ min_replicas }}
  maxReplicas: {{ max_replicas }}
  targetCPUUtilizationPercentage: 75
