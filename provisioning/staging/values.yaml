common:
  name: ps2alerts-api-staging
  hostname: staging.api.ps2alerts.com

application:
  version: {{ version }}

ingress:
  enabled: true

service:
  enabled: true
  prometheusMonitoring: true
  backendTarget: ps2alerts-api-staging-rest # Points to deployment index 1

deployments:
  one:
    index: "rest"
    enabled: true
    containerImage: "maelstromeous/ps2alerts:ps2alerts-api-staging-{{ version }}"
    resources:
      cpu:
        limits: 150m
        requests: 10m
      mem:
        limits: 128Mi
        requests: 64Mi
    probes:
      startupProbe:
        enabled: true
        type: httpGet
        httpGetPath: /healthcheck
      readinessProbe:
        enabled: true
        type: httpGet
        httpGetPath: /healthcheck
      livenessProbe:
        enabled: true
        type: httpGet
        httpGetPath: /healthcheck
    env:
#      - name: NODE_ENV
#        value: "production"
#      - name: VERSION
#        value: "{{ version }}"
#      - name: DB_USER
#        value: "${{ secrets.DB_USER }}"
#      - name: DB_PASS
#        value: "${{ secrets.DB_PASS_NEW }}"
      - name: DB_HOST
        value: "ps2alerts-db"
#      - name: DB_PORT
#        value: "27017"
#      - name: DB_NAME
#        value: "ps2alerts"
#      - name: DB_DEBUG
#        value: "false"
#      - name: DB_POOL_SIZE
#        value: "100"
#      - name: REDIS_HOST
#        value: "ps2alerts-redis-master"
#      - name: REDIS_PASS
#        value: "${{ secrets.REDIS_PASS }}"
#      - name: REDIS_DB
#        value: "11"
#      - name: AGGREGATOR_ENABLED
#        value: "false"
#      - name: CRON_ENABLED
#        value: "false"
#      - name: REST_ENABLED
#        value: "true"
      - name: INTERNAL_API_USER
        value: "${{ secrets.INTERNAL_API_USER }}"
      - name: INTERNAL_API_PASS
        value: "${{ secrets.INTERNAL_API_PASS }}"
#    nodeSelector:
#      nodepool: perm-pool
    scaling:
      enabled: true
      min: 1
      max: 2
      targetCpu: 75
